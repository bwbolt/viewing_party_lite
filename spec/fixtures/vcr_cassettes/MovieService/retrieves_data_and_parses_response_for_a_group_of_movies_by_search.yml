---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=<api_key>&query=Pirates
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 10 Jul 2022 05:15:59 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 48c70f7a0c91fc5e8cb64d6c71ad9826.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C2
      X-Amz-Cf-Id:
      - nchTk0DHF9ZFHJ3h7HIiXz8C8Gr97M5sl6mYdo7Kq6ihW2vomQNqKw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 10 Jul 2022 05:15:59 GMT
recorded_with: VCR 6.1.0
